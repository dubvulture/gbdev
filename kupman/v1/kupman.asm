;************************************************************************
;* Includes																*	
;************************************************************************

	INCLUDE	"includes/Hardware.inc"
	INCLUDE	"includes/Addsub1.inc"
	INCLUDE "includes/SHIFT.INC"



; We define constants
;_A_ROTA_FA_SCHIFO_LA_FIGA	EQU SI
_MAP_VRAM   EQU     _VRAM+$1000
_BITMAP		EQU		_RAM+$0A0

rINPUTS		EQU		_RAM
;	Start	|	Select	|	B	|	A	|	Down	|	Up	|	Sx	|	Dx	|

rMOVE		EQU		_RAM+$01	; Current moving direction
;	0		|	0		|	0	|	0	|	Down	|	Up	|	Sx	|	Dx	|
rDIRECTION	EQU		_RAM+$02	; Global direction

rTRANSITION	EQU		_RAM+$03	; Transition state (only 1 bit, who fucking cares)
;	0		|	0		|	0	|	0	|	0		|	0	|	0	|	T	|

rPOS2		EQU		_RAM+$04
; Current position expressed in Map Tile, inverted for debugging reasons
rPOS1		EQU		_RAM+$05

rTRY		EQU		_RAM+$06

rSCORE		EQU		_RAM+$07
rREMDOTS	EQU		_RAM+$08
rTIMER1		EQU		_RAM+$09
rTIMER2		EQU		_RAM+$0A

_PACY		EQU		_RAM+$1000
_PACX		EQU		_RAM+$1001
_PAC_NUM	EQU		_RAM+$1002
_PAC_ATT	EQU		_RAM+$1003

_GH1Y		EQU		_RAM+$1004
_GH1X		EQU		_RAM+$1005
_GH1_NUM	EQU		_RAM+$1006
_GH1_ATT	EQU		_RAM+$1007

_SPR0_Y     EQU     _OAMRAM
_SPR0_X     EQU     _OAMRAM+$01
_SPR0_NUM   EQU     _OAMRAM+$02
_SPR0_ATT   EQU     _OAMRAM+$03	


;************************************************************************
	SECTION	"V-Blank IRQ Vector",HOME[$40]
VBL_VECT:
	jp		DRAW
	
	SECTION	"Start",HOME[$100]
	nop
	jp		START

; $0104-$0133 (Nintendo logo)
	DB	$CE,$ED,$66,$66,$CC,$0D,$00,$0B,$03,$73,$00,$83,$00,$0C,$00,$0D
	DB	$00,$08,$11,$1F,$88,$89,$00,$0E,$DC,$CC,$6E,$E6,$DD,$DD,$D9,$99
	DB	$BB,$BB,$67,$63,$6E,$0E,$EC,$CC,$DD,$DC,$99,$9F,$BB,$B9,$33,$3E

; $0134-$013E (Game title 11 upper case ASCII characters; pad with $00)
	DB	"WOW PACMAN",0

; $013F-$0142 (Product code assigned by Nintendo)
	DB	"    "

; $0143 (Color GameBoy compatibility code)
	DB	$00	; $00 - DMG 


; $0144 (High-nibble of license code - normally $00 if $014B != $33)
	DB	$00

; $0145 (Low-nibble of license code - normally $00 if $014B != $33)
	DB	$00

; $0146 (GameBoy/Super GameBoy indicator)
	DB	$00	; $00 - GameBoy


; $0147 (Cartridge type - all Color GameBoy cartridges are at least $19)
	DB	$00	; 0 - ROM ONLY

; $0148 (ROM size)
	DB	$00	; 0 - 	256Kbit	=  32KByte	=   2 banks


; $0149 (RAM size)
	DB	$00	; 0 - None

; $014A (Destination code)
	DB	$01	; $01 - All others

; $014B (Licensee code - this _must_ be $33)
	DB	$33	; $33 - Check $0144/$0145 for Licensee code.

; $014C (Mask ROM version - handled by RGBFIX)
	DB	$00

; $014D (Complement check - handled by RGBFIX)
	DB	$00

; $014E-$014F (Cartridge checksum - handled by RGBFIX)
	DW	$00


;************************************************************************
;*	Program Start														*
;************************************************************************

	SECTION "Program Start",HOME[$0150]
START::
	di								; disable interrupts
	ld		sp,$FFFE				; set the stack to $FFFE

	call	WAITERINO
	call	WAITERINO
	call	WAITERINO

	call	WAIT_VBLANK
	ld		a,%00000001
	ldh		[rLCDC],a				; turn off LCD

	ld		a,%11100100				; load a normal palette up 11 10 01 00 - dark->light
	ldh		[rBGP],a				; load the palette
	ldh		[rOBP0],a				; load the palette for Objects


	ld		b,$A0
	ld		hl,_PACY
R1:
	xor		a
	ld		[hl+],a
	dec		b
	jp		nz,R1


	ld		c,$80
	ld		b,$0A					; # bytes of instructions
	ld		hl,DMADATA
R2:
	ld		a,[hl+]
	ld		[c],a					; ld [c],a			a -> $FF00 + [c]
	inc		c
	dec		b
	jr		nz,R2


	xor		a
	ld		[rTRY],a
	ld		[rMOVE],a				; No current moving direction
	ld		[rSCORE],a
	ld		[rINPUTS],a				; No input so far
	ld		[rDIRECTION],a			; Facing direction
	ld		[rTIMER2],a
	ld		a,$0A
	ld		[rTIMER1],a
	ld		a,$90
	ld		[rREMDOTS],a
	ld		a,$99
	ld		[rPOS1],a				; Starting position
	ld		a,$25
	ld		[rPOS2],a


	call	LOAD_START
	call	LOAD_START_TILES

	ld		a,%10001001				;
	ldh		[rLCDC],a				; LCDC On, BG_data from $8800, OBJ OFF, BG Display ON


waitstart:
	call	INPUTS
	ld		a,[rINPUTS]
	cp		$80
	jp		nz,waitstart

; Fading screen
	call	WAIT_VBLANK
	ld		a,%10010000
	ldh		[rBGP],a
	call	WAITERINO
	call	WAIT_VBLANK
	ld		a,%01000000
	ldh		[rBGP],a
	call	WAITERINO

	call	WAIT_VBLANK
	ld		a,%00000001
	ldh		[rLCDC],a				; turn off LCD
	call	WAITERINO

	ld		a,%11100100				; load a normal palette up 11 10 01 00 - dark->light
	ldh		[rBGP],a				; load the palette

	call	LOAD_TILES
	call	LOAD_MAP
	call	LOAD_BITMAP
;	call	CLEAR_SPRITES
	call	LOAD_SPRITES

	call	MAIN_CHAR

	ld		a,%10000011				;
	ldh		[rLCDC],a				; LCDC On, BG_data from $8800, OBJ ON, BG Display ON

	ld		a,%00000001				;
	ldh		[rIE], a				; VBlank interrupt only

	ei
	halt
	nop

	xor		a
	ld		[rINPUTS],a				
waitinput:							
	call	INPUTS					; START input at the beginning
	ld		a,[rINPUTS]
	and		$0C
	jp		z,waitinput

CICLO:

	ld		a,[_PACY]
	ld		l,a
	ld		a,[_PACX]
	ld		h,a

	ld		a,[rTIMER1]
	cp		$00
	jp		z,compute

	dec		a
	ld		[rTIMER1],a
	ld		bc,$0190
waste:
	dec		bc
	ld		a,b
	or		c
	jp		nz,waste
	jp		end


; Compute position in tiles coordinates (ONLY IF X MOD 8 = 0 = Y MOD 8) / otherwise only set transition state
compute:
	ld		a,$0A
	ld		[rTIMER1],a

	ld		a,h
	and		$07
	ld		b,a
	ld		a,l
	and		$07
	or		b
	jp		nz,trans

	xor		a
	ld		[rTRANSITION],a

	ld		d,$98
	ld		e,$00

	xor		a
	ld		b,a						; b = 0
	ld		a,h						; Get X coord
	sub		$08						; Subtract 8
	ld		c,a
	srl16	bc,3					; Divide by 8
	add16r	de,bc					; de = $9800 + $00XX

	xor		a
	ld		b,a						; b = 0
	ld		a,l						; Get Y coord
	sub		$10						; Subtract 16
	ld		c,a
	sla16	bc,2					; Multiply by 4
	add16r	de,bc					; de = $98XX + $00YY

	ld		a,d
	ld		[rPOS1],a
	ld		a,e
	ld		[rPOS2],a

	call	GET_BITMAP
	ld		b,a
	and		$02						; Get dot status
	jp		z,move					; no dot, just move
	ld		a,b
	cp		$07
	jp		nz,remove				; check for powerdot
	ld		a,$00
;	ld		[rBITS],a
remove:
	call	REMOVE_DOT
	jp		move					; Fin, time to move


trans:
	ld		a,$FF
	ld		[rTRANSITION],a

; In transition, can only move in the same direction or opposite one
	ld		a,[rDIRECTION]
	ld		b,a

	cp		$04						; If move >= 04 then updown only
	jp		nc,updown
	
	ld		a,b
	cp		$01						; If move >= 01 (and < 04) then sxdx only
	jp		nc,sxdx

DOOM:
	jp DOOM

updown:
	ld		a,[rMOVE]
	cp		$08						; Down
	jp		z,down
	cp		$04						; Up
	jp		z,up
	ld		a,[rDIRECTION]				; else, follow global direction
	ld		[rMOVE],a
	jp		move

sxdx:
	ld		a,[rMOVE]
	cp		$02						; Sx
	jp		z,sx
	cp		$01						; Dx
	jp		z,dx
	ld		a,[rDIRECTION]
	ld		[rMOVE],a

move:
	ld		a,[rPOS1]
	ld		d,a
	ld		a,[rPOS2]
	ld		e,a

	ld		a,[rMOVE]
compare:
	cp		$08						; Down
	jp		z,down
	cp		$04						; Up
	jp		z,up
	cp		$02						; Sx
	jp		z,sx
	cp		$01						; Dx
	jp		z,dx

	ld		a,[rDIRECTION]
	cp		$00
	jp		nz,compare				; no input => follow global direction


	jp		DOOM


down:
	ld		a,[rTRANSITION]
	cp		$00
	jp		nz,down2
	add16i	de,$0020
	call	GET_BITMAP
	and		$01
	jp		z,try
down2:
	inc		l
	call	_DOWN
	jp		redraw
up:
	ld		a,[rTRANSITION]
	cp		$00
	jp		nz,up2
	sub16i	de,$0020
	call	GET_BITMAP
	and		$01
	jp		z,try
up2:
	dec		l
	call	_UP
	jp		redraw
sx:
	ld		a,[rTRANSITION]
	cp		$00
	jp		nz,sx2
	sub16i	de,$0001
	call	GET_BITMAP
	and		$01
	jp		z,try
sx2:	
	dec		h
	call	_SX
	jp		redraw
dx:
	ld		a,[rTRANSITION]
	cp		$00
	jp		nz,dx2
	add16i	de,$0001
	call	GET_BITMAP
	and		$01
	jp		z,try
dx2:
	inc		h
	call	_DX
	jp		redraw
	

try:
	ld		a,[rDIRECTION]
	ld		[rMOVE],a

	ld		a,[rTRY]
	inc		a
	ld		[rTRY],a
	cp		$02
	jp		nz,move				; Otherwise, redraw and stop


redraw:
; teleport on sides
T1up:
	ld		a,l
	xor		$18
	ld		b,a
	ld		a,h
	xor		$58
	or		b
	jp		nz,T2down

	ld		a,$98
	ld		l,a

	jp		T3

T2down:
	ld		a,l
	xor		$98
	ld		b,a
	ld		a,h
	xor		$58
	or		b
	jp		nz,T3

	ld		a,$18
	ld		l,a
; set position
T3: 	
	ld		a,l
	ld		[_PACY],a
	ld		a,h
	ld		[_PACX],a


	xor		a
	ld		[rTRY],a				; reset try counter


	ld		a,$E0					;
	ldh		[rIF], a				; disable all IF
	
	ei
	halt							; Wait for VBlank
	nop

;	ld		a,%10000011				;
;	ldh		[rLCDC],a				; LCDC On, BG from $8800, OBJ ON, BG Display ON
end:	
	call	INPUTS					; register current input, if any

	ld		a,[rREMDOTS]
	cp		$00
	jp		z,EXIT



	jp		CICLO
	nop

EXIT:
	jp		START	



WAITERINO::
	ld		bc,$EF00
wait:
	dec		bc						; decrement our counter
	ld		a,b						; load B into A
	or		c						; if B or C != 0         			; 1 cycle
	jr  	nz,wait  				; 4 cycles
	ret


WAIT_HBLANK::
	ld		a,[rSTAT]
	cp		$80
	jp		nz,WAIT_HBLANK
	ret


WAIT_VBLANK::
	ldh	a,[rLY]				; get current scanline
	cp	$91					; Are we in v-blank yet?
	jr	nz,WAIT_VBLANK		; if A-91 != 0 then loop
	ret




;**********************************************************************************************
; VBlank interrupt handler
DRAW::
	call	$FF80
	ret

;************************************************************************************
;* SUBROUTINES


GET_POINTS::
	push	de
	ld		a,[rPOS1]
	ld		d,a
	ld		a,[rPOS2]
	ld		e,a
	call	GET_BITMAP
	and		%00000111				; Get only PowerDot or normal dot
	cp		$07						; PowerDot
	jp		nz,normaldot
	ld		a,[rSCORE]
	add		$05
	ld		[rSCORE],a
	jp		endpoints
normaldot:
	cp		$03						; Normal Dot
	jp		nz,DOOM
	ld		a,[rSCORE]
	inc		a
	ld		[rSCORE],a
endpoints:
	ld		a,%00000001
	call	WRITE_BITMAP
	pop		de

	ret


REMOVE_DOT::
	push	hl
	push	de
	ld		a,[rREMDOTS]
	dec		a
	ld		[rREMDOTS],a
	call	GET_POINTS
	call	WAIT_HBLANK
	ld		a,$03
	ld		[de],a
	pop		de
	pop		hl
	ret

; Returns bitmap contents in register A
GET_BITMAP::
	push	hl
	push	de
	sub16i	de,$9800
	ld		hl,_BITMAP
	add16r	hl,de
	ld		a,[hl]
	pop		de
	pop		hl
	ret

; Writes contents of register A to BITMAP
WRITE_BITMAP::
	push	hl
	push	de
	push	bc
	ld		b,a
	sub16i	de,$9800
	ld		hl,_BITMAP
	add16r	de,hl
	ld		a,b
	ld		[de],a
	pop		bc
	pop		de
	pop		hl
	ret

INPUTS::
	push	af
	push	bc

	ld		a,$2F					;
	ld		[rP1],a					; Set 0 at the output line P14 (Up/Down/Left/Right)
	ld		a,[rP1]
	ld		a,[rP1]
	
	cpl
	and		$0F
	swap	a
	ld		b,a

	ld		a,$1F
	ld		[rP1],a
	ld		a,[rP1]
	ld		a,[rP1]
	ld		a,[rP1]
	ld		a,[rP1]
	ld		a,[rP1]
	ld		a,[rP1]

	cpl
	and		$0F
	or		b
	swap	a
	jp		nz,store
	ld		a,[rINPUTS]
store:
	ld		[rINPUTS],a
	ld		[rMOVE],a



	ld		a,$3F
	ld		[rP1],a

	pop		bc
	pop		af
	ret

MAIN_CHAR::
	ld		a,$30
	ld		[_PACX],a
	ld		a,$58  
	ld		[_PACY],a
	call	_UP
	ret


_DOWN::
	ld		a,$01
	ld		[_PAC_NUM],a
	ld		a,$C0				; Flip vertical
	ld		[_PAC_ATT],a
	ld		a,$08
	ld		[rDIRECTION],a
	ret

_UP::
	ld		a,$01
	ld		[_PAC_NUM],a
	ld		a,$80
	ld		[_PAC_ATT],a
	ld		a,$04
	ld		[rDIRECTION],a
	ret

_SX::
	xor		a
	ld		[_PAC_NUM],a
	ld		a,$A0				; Flip horizontal
	ld		[_PAC_ATT],a
	ld		a,$02
	ld		[rDIRECTION],a
	ret

_DX::
	xor		a
	ld		[_PAC_NUM],a
	ld		a,$80
	ld		[_PAC_ATT],a
	ld		a,$01
	ld		[rDIRECTION],a
	ret





;*******************************************************************************
;
; Loading a bunch of shit.

LOAD_TILES::
	ld		hl,SHIT_TILES
	ld		de,_MAP_VRAM
	ld		b,$40					; Number of tiles * 16 bytes each
LOAD_TILES_LOOP::
	ld		a,[hl+]					; get a byte from our tiles, and increment.
	ld		[de],a					; put that byte in VRAM and
	inc		de						; increment.
	dec		b
	jr		nz,LOAD_TILES_LOOP		; then loop.
	ret


LOAD_START_TILES::
	ld		hl,STARTMAP_TILES
	ld		de,_MAP_VRAM
	ld		bc,$0800
LOAD_START_TILES_LOOP::
	ld		a,[hl+]					; get a byte from our tiles, and increment.
	ld		[de],a					; put that byte in VRAM and
	inc		de						; increment.
	dec		bc
	ld		a,b
	or		c
	jr		nz,LOAD_START_TILES_LOOP		; then loop.

	ld		de,$8800
	ld		bc,$0300
LOAD_START_TILES_LOOP_2::
	ld		a,[hl+]
	ld		[de],a
	inc		de
	dec		bc
	ld		a,b
	or		c
	jr		nz,LOAD_START_TILES_LOOP_2
	ret


LOAD_MAP::
	push	hl
	push	de
	push	bc

	ld		de,_SCRN0
	ld		hl,SHIT_MAP
	ld		bc,$0400
LOAD_MAP_LOOP::
	ld		a,[hl+]					; get a byte of the map and inc hl
	ld		[de],a					; put the byte at de
	inc		de
	dec		bc		
	ld		a,b
	or		c
	jr		nz,LOAD_MAP_LOOP

	pop		bc
	pop		de
	pop		hl
	ret


LOAD_START::
	push	hl
	push	de
	push	bc

	ld		de,_SCRN1
	ld		hl,STARTMAP
	ld		bc,$0400
LOAD_START_LOOP::
	ld		a,[hl+]					; get a byte of the map and inc hl
	ld		[de],a					; put the byte at de
	inc		de
	dec		bc		
	ld		a,b
	or		c
	jr		nz,LOAD_START_LOOP

	pop		bc
	pop		de
	pop		hl
	ret


LOAD_BITMAP::
	push	hl
	push	de
	push	bc

	ld		de,_BITMAP
	ld		hl,BITMAP
	ld		bc,$0400
LOAD_BITMAP_LOOP::
	ld		a,[hl+]					; get a byte of the map and inc hl
	ld		[de],a					; put the byte at de
	inc		de
	dec		bc		
	ld		a,b
	or		c
	jr		nz,LOAD_BITMAP_LOOP

	pop		bc
	pop		de
	pop		hl
	ret



CLEAR_SPRITES::
	push	hl
	push	bc

	ld		hl,_OAMRAM
	ld		b,$A0					; counter - $FEA0 - $FE00
CLEAR_SPRITES_LOOP::
	xor		a
	ld		[hl+],a					; load A into [HL], then increment HL
	dec		b						; decrement our counter
	jr		nz,CLEAR_SPRITES_LOOP	; then loop
	
	pop		bc
	pop		hl
	ret

; Move sprites to VRAM[$8000]
LOAD_SPRITES::	
	push	af
	push	bc
	push	de
	push	hl

	ld		hl,MY_SPRITES
	ld		de,_VRAM
	ld		b,$A0					; $0A tiles * $10 bytes each
LOAD_SPRITES_LOOP::
	ld		a,[hl+]					; get a byte of the map and inc hl
	ld		[de],a					; put the byte at de
	inc		de
	dec		b
	jr		nz,LOAD_SPRITES_LOOP	; then loop.

	pop		hl
	pop		de
	pop		bc
	pop		af
	ret

;********************************************************************

SECTION "DmaTransfer",HOME[$0800]
DMADATA::
DB $3E,$D0,$E0,$46,$3E,$28,$3D,$20,$FD,$C9
; 3ED0		:	ld	a,$D0
; E046		:	ld	[rDMA],a
; 3E28		:	ld	a,$28
; L1:
; 3D		:	dec	a
; 20FD		:	jr	nz,L1
; C9		:	ret

SECTION "Sprites",HOME[$0900]

; Start of tile array.

MY_SPRITES::
;HOR
DB $1F,$1F,$3E,$3E,$7C,$7C,$78,$78,$78,$78,$7C,$7C,$3E,$3E,$1F,$1F			; 00
;VER
DB $81,$81,$C3,$C3,$E7,$E7,$FF,$FF,$FF,$FF,$7E,$7E,$3C,$3C,$00,$00			; 01
NUMBERS::
DB $7E,$7E,$46,$46,$4E,$4E,$56,$56,$66,$66,$46,$46,$7E,$7E,$00,$00			; 02 - 0
DB $38,$38,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$3C,$3C,$00,$00			; 03 - 1
DB $7E,$7E,$06,$06,$06,$06,$7E,$7E,$60,$60,$60,$60,$7E,$7E,$00,$00			; 04 - 2/5
DB $7E,$7E,$06,$06,$06,$06,$1E,$1E,$06,$06,$06,$06,$7E,$7E,$00,$00			; 05 - 3
DB $60,$60,$60,$60,$60,$60,$66,$66,$7E,$7E,$06,$06,$06,$06,$00,$00			; 06 - 4
DB $7E,$7E,$60,$60,$60,$60,$7E,$7E,$62,$62,$62,$62,$7E,$7E,$00,$00			; 07 - 6/9
DB $7E,$7E,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$00,$00			; 08 - 7
DB $7E,$7E,$46,$46,$46,$46,$7E,$7E,$46,$46,$46,$46,$7E,$7E,$00,$00			; 09 - 8



;************************************************************
;* Tile map

SECTION "Map",HOME[$0A00]

SHIT_MAP::
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$01,$01,$00,$02,$01,$01,$00,$00,$01,$00,$00,$01,$01,$01
DB $01,$02,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$00,$01,$00,$00,$01,$00,$00,$01,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$00,$00,$00,$01,$00,$00,$01,$00,$00,$01,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
DB $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$00,$00,$01,$00,$01,$00,$00,$03,$00,$00,$00,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$00,$01,$03,$03,$03,$03,$00,$01,$01,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$01,$01,$00,$01,$01,$01,$00,$03,$00,$03,$03,$01,$00,$01
DB $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$00,$00,$03,$00,$00,$00,$03,$00,$03,$00,$00,$00,$01
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$01,$01,$00,$01,$01,$01,$00,$03,$00,$03,$03,$01,$00,$01
DB $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$00,$01,$03,$03,$03,$03,$00,$01,$01,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$00,$00,$01,$00,$01,$00,$00,$03,$00,$00,$00,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
DB $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$00,$00,$00,$01,$00,$00,$01,$00,$00,$01,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$00,$01,$01,$01,$00,$01,$00,$00,$01,$00,$00,$01,$00,$01
DB $00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$01,$01,$01,$00,$02,$01,$01,$00,$00,$01,$00,$00,$01,$01,$01
DB $01,$02,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00



STARTMAP::
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $01,$02,$03,$04,$02,$05,$06,$02,$07,$08,$07,$01,$09,$00,$0A,$0B
DB $0C,$0D,$05,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $0F,$10,$11,$12,$10,$13,$14,$10,$15,$16,$17,$18,$19,$1A,$1B,$1C
DB $1D,$1E,$1F,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $0F,$10,$21,$22,$10,$23,$14,$10,$24,$25,$26,$27,$19,$28,$29,$2A
DB $1D,$2B,$10,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $2C,$2D,$2E,$2F,$30,$31,$32,$2D,$33,$34,$35,$36,$35,$37,$38,$39
DB $3A,$3B,$3C,$3D,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $3E,$3F,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$4A,$4B,$4C,$4D
DB $4E,$4F,$50,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$51,$52,$53,$54,$55,$56,$57,$58,$59,$5A,$5B,$5C,$5D,$5E,$5F
DB $60,$61,$62,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$63,$64,$65,$66,$67,$68,$69,$6A,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$6B,$6C,$6D,$6E,$6F,$70,$71,$72,$73,$74,$75,$76
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$77,$78,$79,$7A,$7B,$7C,$7D,$7E,$7F,$80,$81,$82
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$83,$84,$00,$85,$83,$86,$87,$83,$00,$83,$88,$89
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$8A,$8B,$8C,$8D,$8B,$8E,$8F,$90,$00,$8A,$8B,$8C,$8D,$8B
DB $91,$8D,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$92,$93,$94,$95,$96,$97,$98,$99,$9A,$9B,$96,$9C,$9D,$9E
DB $9F,$A0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$A1,$A2,$A3,$A4,$A5,$A6,$A1,$A2,$A3,$A7,$A8,$A9
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00




;************************************************************
;* Bitmap
;* Each $XX represents the following:
;*	0		|	Pacman	|	Ghost	|	Symbol	|	0		|	PowerDot	|	Dot	|	Pathable	|
BITMAP::
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$03,$03,$00,$07,$03,$03,$00,$00,$03,$00,$00,$03,$03,$03
DB $03,$07,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$00,$03,$00,$00,$03,$00,$00,$03,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$00,$00,$00,$03,$00,$00,$03,$00,$00,$03,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03
DB $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$00,$00,$03,$00,$03,$00,$00,$01,$00,$00,$00,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$00,$03,$01,$01,$01,$01,$00,$03,$03,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$03,$03,$00,$03,$03,$03,$00,$01,$00,$01,$01,$03,$00,$03
DB $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$00,$00,$01,$00,$00,$00,$01,$00,$01,$00,$00,$00,$03
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$03,$03,$00,$03,$03,$03,$00,$01,$00,$01,$01,$03,$00,$03
DB $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$00,$03,$01,$01,$01,$01,$00,$03,$03,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$00,$00,$03,$00,$03,$00,$00,$01,$00,$00,$00,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03
DB $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$00,$00,$00,$03,$00,$00,$03,$00,$00,$03,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$00,$03,$03,$03,$00,$03,$00,$00,$03,$00,$00,$03,$00,$03
DB $00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$03,$03,$03,$00,$07,$03,$03,$00,$00,$03,$00,$00,$03,$03,$03
DB $03,$07,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

;********************************************************************

 SECTION "Tiles", HOME[$2000]

SHIT_TILES::
DB $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF
DB $00,$00,$00,$00,$00,$00,$18,$18,$18,$18,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$3C,$3C,$3C,$3C,$3C,$3C,$3C,$3C,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00


STARTMAP_TILES::
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1F,$1F
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$F1,$F1
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$3F
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E1,$E1
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FC,$FC
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FE,$FE
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7F,$7F
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$80,$80
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$0F
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E0,$E0
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$C0,$C0
DB $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
DB $3F,$3F,$3F,$3F,$3F,$3F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$FF,$FF
DB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$C1,$C1,$C1,$C1,$C1,$C1,$81,$81
DB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F
DB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$3F,$3F,$3F,$3F
DB $03,$03,$83,$83,$83,$83,$C3,$C3,$C3,$C3,$E3,$E3,$E3,$E3,$E3,$E3
DB $FE,$FE,$FE,$FE,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
DB $03,$03,$07,$07,$07,$07,$8F,$8F,$8F,$8F,$DF,$DF,$DF,$DF,$FF,$FF
DB $FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE
DB $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$03,$03,$03,$03
DB $7F,$7F,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
DB $80,$80,$C0,$C0,$C0,$C0,$E0,$E0,$E0,$E0,$F0,$F0,$F0,$F0,$F8,$F8
DB $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F
DB $F0,$F0,$F8,$F8,$F8,$F8,$FC,$FC,$FE,$FE,$FF,$FF,$FF,$FF,$FF,$FF
DB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$BF,$BF
DB $C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0
DB $FF,$FF,$FF,$FF,$FE,$FE,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$7F,$7F
DB $81,$81,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$81,$81,$81,$81
DB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$FF,$FF
DB $3F,$3F,$3F,$3F,$7F,$7F,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
DB $E3,$E3,$E3,$E3,$E3,$E3,$E3,$E3,$C3,$C3,$C3,$C3,$83,$83,$83,$83
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FE,$FE
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FB,$FB
DB $03,$03,$07,$07,$07,$07,$07,$07,$0F,$0F,$0F,$0F,$1F,$1F,$1F,$1F
DB $FF,$FF,$FB,$FB,$F1,$F1,$F1,$F1,$F1,$F1,$FF,$FF,$FF,$FF,$FF,$FF
DB $F8,$F8,$FC,$FC,$FC,$FC,$FC,$FC,$FE,$FE,$FE,$FE,$FE,$FE,$FF,$FF
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F7,$F7,$F3,$F3
DB $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00,$00,$00,$00
DB $7F,$7F,$7F,$7F,$3F,$3F,$3F,$3F,$1F,$1F,$1F,$1F,$00,$00,$00,$00
DB $C1,$C1,$C1,$C1,$E1,$E1,$E0,$E0,$F0,$F0,$F0,$F0,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$7F,$7F,$1F,$1F,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FC,$FC,$00,$00,$00,$00
DB $E1,$E1,$E1,$E1,$C1,$C1,$C1,$C1,$81,$81,$01,$01,$00,$00,$00,$00
DB $FF,$FF,$FC,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$00,$00,$00,$00
DB $FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00,$00,$00,$00
DB $FB,$FB,$73,$73,$73,$73,$73,$73,$23,$23,$23,$23,$00,$00,$00,$00
DB $1F,$1F,$3F,$3F,$3F,$3F,$3F,$3F,$7F,$7F,$7F,$7F,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$C0,$C0,$C0,$C0,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$7F,$7F,$7F,$7F,$00,$00,$00,$00
DB $0F,$0F,$0F,$0F,$8F,$8F,$8F,$8F,$CF,$CF,$CF,$CF,$00,$00,$00,$00
DB $F1,$F1,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$00,$00,$00,$00
DB $FF,$FF,$FF,$FF,$FF,$FF,$7F,$7F,$3F,$3F,$3F,$3F,$00,$00,$00,$00
DB $C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$00,$00,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00
DB $00,$00,$00,$00,$00,$00,$00,$0C,$00,$CC,$00,$CC,$00,$EF,$00,$CC
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$8F,$00,$D9
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$00,$86
DB $00,$00,$00,$00,$00,$00,$00,$30,$00,$30,$00,$30,$00,$BE,$00,$33
DB $00,$00,$00,$00,$00,$00,$00,$60,$00,$66,$00,$06,$00,$6F,$00,$66
DB $00,$00,$00,$00,$00,$00,$00,$03,$00,$33,$00,$30,$00,$7B,$00,$33
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3C,$00,$66
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$00,$03,$00,$77,$00,$C3
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$87,$00,$06
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$C7,$00,$61
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1E,$00,$B0
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7F,$00,$6D
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$00,$83
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7C,$00,$66
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$00,$18
DB $00,$00,$00,$00,$00,$00,$00,$60,$00,$60,$00,$60,$00,$67,$00,$6C
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$9F,$00,$D9
DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1E,$00,$B3
DB $00,$CC,$00,$CC,$00,$CC,$00,$6C,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$DF,$00,$D8,$00,$D8,$00,$CF,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$87,$00,$03,$00,$01,$00,$87,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$33,$00,$B3,$00,$B3,$00,$33,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$66,$00,$66,$00,$66,$00,$63,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$33,$00,$33,$00,$33,$00,$1B,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$7E,$00,$60,$00,$60,$00,$3E,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$E3,$00,$73,$00,$33,$00,$E1,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$06,$00,$06,$00,$06,$00,$87,$00,$06,$00,$06,$00,$06,$00,$00
DB $00,$67,$00,$6D,$00,$6D,$00,$C7,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$B0,$00,$B0,$00,$B0,$00,$9E,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$6D,$00,$6D,$00,$6D,$00,$6D,$00,$00,$00,$0C,$00,$0C,$00,$0C
DB $00,$8F,$00,$9B,$00,$9B,$00,$8F,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$66,$00,$66,$00,$66,$00,$66,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$18,$00,$18,$00,$18,$00,$0F,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$6C,$00,$6C,$00,$6C,$00,$67,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$D9,$00,$D9,$00,$D9,$00,$99,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$BF,$00,$B0,$00,$B0,$00,$9F,$00,$00,$00,$00,$00,$00,$00,$00
DB $00,$1E,$00,$33,$00,$3F,$00,$30,$00,$30,$00,$1F,$00,$00,$00,$00
DB $00,$66,$00,$66,$00,$3C,$00,$3C,$00,$18,$00,$18,$00,$00,$00,$00
DB $00,$79,$00,$CD,$00,$FD,$00,$C1,$00,$C1,$00,$7D,$00,$00,$00,$00
DB $00,$E0,$00,$80,$00,$80,$00,$80,$00,$80,$00,$80,$00,$00,$00,$00
DB $00,$FE,$00,$DB,$00,$DB,$00,$DB,$00,$DB,$00,$DB,$00,$00,$00,$00
DB $00,$1C,$00,$06,$00,$1E,$00,$36,$00,$36,$00,$1E,$00,$00,$00,$00
DB $00,$7C,$00,$CD,$00,$CD,$00,$CD,$00,$CD,$00,$7C,$00,$00,$00,$00
DB $00,$F0,$00,$98,$00,$F8,$00,$80,$00,$80,$00,$F8,$00,$00,$00,$00
DB $07,$07,$06,$06,$06,$06,$06,$06,$07,$07,$06,$06,$06,$06,$06,$06
DB $C7,$C7,$66,$66,$66,$66,$66,$66,$C7,$C7,$06,$06,$06,$06,$06,$06
DB $C7,$C7,$66,$66,$66,$66,$66,$66,$C7,$C7,$C6,$C6,$66,$66,$66,$66
DB $E3,$E3,$06,$06,$06,$06,$03,$03,$C1,$C1,$00,$00,$00,$00,$06,$06
DB $C3,$C3,$66,$66,$06,$06,$03,$03,$81,$81,$C0,$C0,$60,$60,$66,$66
DB $C0,$C0,$60,$60,$00,$00,$00,$00,$80,$80,$C0,$C0,$60,$60,$60,$60
DB $03,$03,$06,$06,$06,$06,$03,$03,$01,$01,$00,$00,$00,$00,$06,$06
DB $C7,$C7,$61,$61,$01,$01,$01,$01,$81,$81,$C1,$C1,$61,$61,$61,$61
DB $E1,$E1,$83,$83,$86,$86,$86,$86,$86,$86,$87,$87,$86,$86,$86,$86
DB $87,$87,$C6,$C6,$66,$66,$66,$66,$67,$67,$E6,$E6,$66,$66,$66,$66
DB $C7,$C7,$61,$61,$61,$61,$61,$61,$C1,$C1,$C1,$C1,$61,$61,$61,$61
DB $E0,$E0,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80
DB $06,$06,$00,$00,$00,$00,$00,$00,$7E,$7E,$18,$18,$18,$18,$18,$18
DB $06,$06,$00,$00,$00,$00,$00,$00,$3C,$3C,$66,$66,$66,$66,$66,$66
DB $67,$67,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $E3,$E3,$00,$00,$00,$00,$00,$00,$3C,$3C,$66,$66,$60,$60,$30,$30
DB $C3,$C3,$00,$00,$00,$00,$00,$00,$7E,$7E,$18,$18,$18,$18,$18,$18
DB $C0,$C0,$00,$00,$00,$00,$00,$00,$18,$18,$3C,$3C,$66,$66,$66,$66
DB $03,$03,$00,$00,$00,$00,$00,$00,$7C,$7C,$66,$66,$66,$66,$66,$66
DB $C1,$C1,$00,$00,$00,$00,$00,$00,$7E,$7E,$18,$18,$18,$18,$18,$18
DB $86,$86,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $66,$66,$00,$00,$00,$00,$00,$00,$7E,$7E,$18,$18,$18,$18,$18,$18
DB $61,$61,$00,$00,$00,$00,$00,$00,$66,$66,$66,$66,$66,$66,$66,$66
DB $80,$80,$00,$00,$00,$00,$00,$00,$7E,$7E,$60,$60,$60,$60,$60,$60
DB $18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$00,$00,$00,$00,$00,$00
DB $66,$66,$66,$66,$66,$66,$66,$66,$3C,$3C,$00,$00,$00,$00,$00,$00
DB $18,$18,$0C,$0C,$06,$06,$66,$66,$3C,$3C,$00,$00,$00,$00,$00,$00
DB $66,$66,$7E,$7E,$66,$66,$66,$66,$66,$66,$00,$00,$00,$00,$00,$00
DB $7C,$7C,$6C,$6C,$66,$66,$66,$66,$66,$66,$00,$00,$00,$00,$00,$00
DB $7E,$7E,$66,$66,$66,$66,$66,$66,$66,$66,$00,$00,$00,$00,$00,$00
DB $7C,$7C,$60,$60,$60,$60,$60,$60,$7E,$7E,$00,$00,$00,$00,$00,$00
DB $3C,$3C,$66,$66,$60,$60,$30,$30,$18,$18,$0C,$0C,$06,$06,$66,$66
DB $7E,$7E,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18
DB $18,$18,$3C,$3C,$66,$66,$66,$66,$66,$66,$7E,$7E,$66,$66,$66,$66
DB $7C,$7C,$66,$66,$66,$66,$66,$66,$7C,$7C,$6C,$6C,$66,$66,$66,$66
DB $3C,$3C,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18
DB $63,$63,$63,$63,$73,$73,$7B,$7B,$6F,$6F,$67,$67,$63,$63,$63,$63
DB $3C,$3C,$66,$66,$66,$66,$60,$60,$60,$60,$6E,$6E,$66,$66,$66,$66
DB $7E,$7E,$60,$60,$60,$60,$60,$60,$7C,$7C,$60,$60,$60,$60,$60,$60
DB $3C,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $18,$18,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $66,$66,$00,$00,$00,$00,$00,$00,$03,$03,$06,$06,$06,$06,$03,$03
DB $66,$66,$00,$00,$00,$00,$00,$00,$C7,$C7,$61,$61,$01,$01,$01,$01
DB $18,$18,$00,$00,$00,$00,$00,$00,$E1,$E1,$83,$83,$86,$86,$86,$86
DB $3C,$3C,$00,$00,$00,$00,$00,$00,$87,$87,$C6,$C6,$66,$66,$66,$66
DB $63,$63,$00,$00,$00,$00,$00,$00,$C7,$C7,$61,$61,$61,$61,$61,$61
DB $3E,$3E,$00,$00,$00,$00,$00,$00,$E0,$E0,$80,$80,$80,$80,$80,$80
DB $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$06,$06,$06,$06,$03,$03
DB $3C,$3C,$00,$00,$00,$00,$00,$00,$C7,$C7,$61,$61,$01,$01,$01,$01
DB $66,$66,$00,$00,$00,$00,$00,$00,$83,$83,$C6,$C6,$66,$66,$66,$66
DB $66,$66,$00,$00,$00,$00,$00,$00,$C7,$C7,$66,$66,$66,$66,$06,$06
DB $18,$18,$00,$00,$00,$00,$00,$00,$E0,$E0,$00,$00,$00,$00,$00,$00
DB $7E,$7E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $66,$66,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
DB $01,$01,$00,$00,$00,$00,$06,$06,$03,$03,$00,$00,$00,$00,$00,$00
DB $81,$81,$C1,$C1,$61,$61,$61,$61,$C1,$C1,$00,$00,$00,$00,$00,$00
DB $86,$86,$87,$87,$86,$86,$86,$86,$86,$86,$00,$00,$00,$00,$00,$00
DB $67,$67,$E6,$E6,$66,$66,$66,$66,$66,$66,$00,$00,$00,$00,$00,$00
DB $C1,$C1,$C1,$C1,$61,$61,$61,$61,$61,$61,$00,$00,$00,$00,$00,$00
DB $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$00,$00,$00,$00,$00,$00
DB $66,$66,$E6,$E6,$66,$66,$66,$66,$63,$63,$00,$00,$00,$00,$00,$00
DB $07,$07,$E6,$E6,$66,$66,$66,$66,$E7,$E7,$00,$00,$00,$00,$00,$00
DB $C0,$C0,$00,$00,$00,$00,$00,$00,$E0,$E0,$00,$00,$00,$00,$00,$00